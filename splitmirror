#!/bin/sh
# This script creates a splitmirror backup of the os volumes.
# Copyright 2013 by Reiner Rottmann (reiner@rottmann.it). Released under the BSD License.
rootvol=`df -hP / |grep ^/ |cut -d ' ' -f1`
rootvg=`basename $rootvol |cut -d '-' -f1`
clonepostfix=_clone  # postfix for the clone name

function exit_error {
   echo "ERROR: Command execution failed. Exiting."
   exit 1
}

# preflight checks
if ! uname -r |grep -q el6; then
   echo "ERROR: This script needs to be run on RHEL 6."
   exit 1
fi
if [ -z "$rootvol" ]; then
   echo "ERROR: Could not determine the root volume."
   exit 1
fi
if [ -z "$rootvg" ]; then
   echo "ERROR: Could not determine the lvm2 volume group of the root volume."
   exit 1
fi
if ! vgs --noheadings --options vg_extent_count,vg_free_count vg00 | python -c 'import sys; total,free=sys.stdin.readline().split();print float(free)/float(total)>0.5' | grep -q True; then
   echo "ERROR: Not enough free extends on $rootvg."
   exit 1
fi
# create clones of each lv on the vg with the root volume (using lvm mirror and splitmirror)
lvs $rootvg --noheadings | grep -v "$clonepostfix" | while read lv foo
do
   cmd="lvconvert --mirrors 1 --corelog --alloc anywhere $rootvg/$lv"
   echo "# $cmd"
   $cmd || exit_error
   cmd="lvconvert --splitmirrors 1 --name $lv$clonepostfix $rootvg/$lv"
   echo "# $cmd"
   $cmd || exit_error
done
